# ==============================================================================
# FILE: .github/workflows/nightly-build.yml  
# ==============================================================================
---
name: Nightly Build

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/Breakout.csproj'

jobs:
  nightly-test:
    name: Nightly Full Test
    strategy:
      matrix:
        include:
          - os: windows-latest
            framework: net9.0-android
            workloads: "maui android"
          # iOS and MacCatalyst temporarily disabled due to Xcode requirements
          # - os: macos-latest
          #   framework: net9.0-ios
          #   workloads: "maui ios"
          # - os: macos-latest
          #   framework: net9.0-maccatalyst
          #   workloads: "maui maccatalyst"
          - os: windows-latest
            framework: net9.0-windows10.0.19041.0
            workloads: "maui"
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Java (Android only)
      if: contains(matrix.framework, 'android')
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install MAUI workloads
      shell: pwsh
      run: |
        dotnet nuget locals all --clear
        $workloads = "${{ matrix.workloads }}".Split(' ')
        foreach ($workload in $workloads) {
          Write-Host "Installing workload: $workload"
          dotnet workload install $workload
        }
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build and Test
      shell: pwsh
      run: |
        # Build
        dotnet build ${{ env.PROJECT_PATH }} `
          -c Release `
          -f ${{ matrix.framework }} `
          --no-restore `
          --verbosity normal
        
        # If this was a test project, we'd run tests here
        # dotnet test ${{ env.PROJECT_PATH }} --no-build --configuration Release
        
    - name: Archive build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ matrix.framework }}-${{ github.run_number }}
        path: |
          **/*.binlog
          **/*.log
        retention-days: 7

  check-xcode-status:
    name: Check Xcode Version Status
    runs-on: macos-latest
    
    steps:
    - name: Check Xcode Version
      run: |
        echo "=== Current Xcode Version ===" 
        xcode-select -p
        xcrun --show-sdk-version --sdk iphoneos
        
        echo "=== .NET 9 Requirement ==="
        echo ".NET 9 for iOS requires Xcode 16.4"
        echo "Current runner has: $(xcrun --show-sdk-version --sdk iphoneos)"
        
        # Check if we can enable iOS builds again
        CURRENT_VERSION=$(xcrun --show-sdk-version --sdk iphoneos | cut -d. -f1)
        if [ "$CURRENT_VERSION" -ge "17" ]; then
          echo "✅ iOS builds can potentially be re-enabled!"
        else
          echo "⚠️ iOS builds still need to remain disabled"
        fi
