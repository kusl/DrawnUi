name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/Breakout.csproj'

jobs:
  build-android-apk:
    name: Build Android APK
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'
        
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Clear NuGet cache and install MAUI
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui
        
    - name: Restore Android dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }} -f net9.0-android
      
    - name: Build Release APK
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} `
          -c Release `
          -f net9.0-android `
          --no-restore `
          -o ./build-output `
          --verbosity normal
          
    - name: Find and display APK
      id: find_apk
      run: |
        $apkFiles = Get-ChildItem -Path "build-output" -Recurse -Include "*.apk"
        
        if ($apkFiles.Count -gt 0) {
          $apkFile = $apkFiles[0]
          $apkSize = ($apkFile.Length/1MB).ToString('F2')
          Write-Host "✅ APK built successfully!" -ForegroundColor Green
          Write-Host "📱 File: $($apkFile.Name)" -ForegroundColor Cyan
          Write-Host "📏 Size: $apkSize MB" -ForegroundColor Cyan
          Write-Host "📂 Path: $($apkFile.FullName)" -ForegroundColor Cyan
          
          # Set outputs for next step
          echo "apk_path=$($apkFile.FullName)" >> $env:GITHUB_OUTPUT
          echo "apk_name=$($apkFile.Name)" >> $env:GITHUB_OUTPUT
          echo "apk_size=$apkSize" >> $env:GITHUB_OUTPUT
        } else {
          Write-Host "❌ No APK files found!" -ForegroundColor Red
          Write-Host "Build output contents:" -ForegroundColor Yellow
          Get-ChildItem -Path "build-output" -Recurse | ForEach-Object {
            Write-Host "  $($_.FullName)" -ForegroundColor Gray
          }
          exit 1
        }
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: breakout-android-apk
        path: ${{ steps.find_apk.outputs.apk_path }}
        retention-days: 90
        
    - name: Create release tag
      id: create_tag
      run: |
        $timestamp = Get-Date -Format "yyyy.MM.dd-HHmm"
        $shortSha = "${{ github.sha }}".Substring(0,7)
        $version = "v$timestamp-$shortSha"
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Created version: $version"
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.create_tag.outputs.version }}
        name: Breakout Android ${{ steps.create_tag.outputs.version }}
        body: |
          # 🎮 Breakout Game - Android Release
          
          **🚀 Ready to install!** This is a stable release build.
          
          ## 📱 Installation
          1. Download the APK file below
          2. On your Android device, enable "Install from unknown sources" in Settings
          3. Open the downloaded APK file to install
          
          ## 📊 Build Info
          - **APK Size**: ${{ steps.find_apk.outputs.apk_size }} MB
          - **Build Date**: $(Get-Date -Format "yyyy-MM-dd HH:mm") UTC
          - **Commit**: ${{ github.sha }}
          - **Built with**: .NET 9 + MAUI
          
          ## 🎯 Game Features
          - Classic Breakout/Arkanoid gameplay
          - Multiple levels and power-ups
          - Touch controls optimized for mobile
          - Retro-style graphics and sound
          
          ## 🔄 What's New
          - Latest build from main branch
          - Performance optimizations
          - Bug fixes and improvements
          
        files: ${{ steps.find_apk.outputs.apk_path }}
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Success summary
      run: |
        Write-Host "" -ForegroundColor Green
        Write-Host "🎉 BUILD SUCCESSFUL! 🎉" -ForegroundColor Green
        Write-Host "" -ForegroundColor Green
        Write-Host "✅ APK: ${{ steps.find_apk.outputs.apk_name }}" -ForegroundColor Cyan
        Write-Host "✅ Size: ${{ steps.find_apk.outputs.apk_size }} MB" -ForegroundColor Cyan
        Write-Host "✅ Release: ${{ steps.create_tag.outputs.version }}" -ForegroundColor Cyan
        Write-Host "✅ Available as GitHub release (NOT prerelease)" -ForegroundColor Cyan
        Write-Host "" -ForegroundColor Green
