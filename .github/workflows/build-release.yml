name: Build and Release

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/Breakout.csproj'

jobs:
  build-android:
    name: Build Android
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install MAUI workloads
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build Android Debug APK
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} `
          -c Debug `
          -f net9.0-android `
          --no-restore `
          -o ./artifacts/android-debug
          
    - name: Build Android Release APK
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} `
          -c Release `
          -f net9.0-android `
          --no-restore `
          -o ./artifacts/android-release
          
    - name: Upload Android Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: android-debug-apk
        path: ./artifacts/android-debug/**/*.apk
        retention-days: 30
        
    - name: Upload Android Release APK
      uses: actions/upload-artifact@v4
      with:
        name: android-release-apk
        path: ./artifacts/android-release/**/*.apk
        retention-days: 90

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install MAUI workloads
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build Windows Release
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} `
          -c Release `
          -f net9.0-windows10.0.19041.0 `
          --no-restore `
          -o ./artifacts/windows-release
          
    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: windows-release
        path: ./artifacts/windows-release/**/*
        retention-days: 90

  build-ios:
    name: Build iOS (when possible)
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install MAUI workloads
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui ios
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    # Note: This will likely fail without proper provisioning profiles
    # but will at least verify the project structure and dependencies
    - name: Build iOS (verification build)
      continue-on-error: true
      run: |
        dotnet build ${{ env.PROJECT_PATH }} \
          -c Release \
          -f net9.0-ios \
          --no-restore

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Run tests (if any test projects exist)
      run: |
        # Look for test projects
        if find . -name "*.Test*.csproj" -o -name "*Test.csproj" -o -name "*.Tests.csproj" | grep -q .; then
          echo "Found test projects, running tests..."
          dotnet test --no-restore --verbosity normal
        else
          echo "No test projects found, skipping tests"
        fi

  create-release:
    name: Create GitHub Release
    needs: [build-android, build-windows, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./release-artifacts
        
    - name: Create release tag
      id: create_tag
      run: |
        # Generate a version based on date and commit
        VERSION="v$(date +'%Y.%m.%d')-$(echo ${{ github.sha }} | cut -c1-7)"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
        
    - name: Zip artifacts
      run: |
        cd ./release-artifacts
        
        # Zip Android APKs
        if [ -d "android-release-apk" ]; then
          zip -r ../android-release.zip android-release-apk/
        fi
        
        if [ -d "android-debug-apk" ]; then
          zip -r ../android-debug.zip android-debug-apk/
        fi
        
        # Zip Windows build
        if [ -d "windows-release" ]; then
          zip -r ../windows-release.zip windows-release/
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.create_tag.outputs.version }}
        name: Release ${{ steps.create_tag.outputs.version }}
        body: |
          ## Breakout Game Release ${{ steps.create_tag.outputs.version }}
          
          **Built from commit:** ${{ github.sha }}
          
          ### Downloads:
          - **Android APK (Release)**: `android-release.zip` - Ready for installation
          - **Android APK (Debug)**: `android-debug.zip` - Debug version with additional logging
          - **Windows**: `windows-release.zip` - Windows executable
          
          ### Changes:
          - Built from latest main branch
          - Automated build and release
          
        files: |
          android-release.zip
          android-debug.zip
          windows-release.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build on feature branches (no release)
  build-feature:
    name: Build Feature Branch
    runs-on: windows-latest
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install MAUI workloads
      run: |
        dotnet nuget locals all --clear
        dotnet workload install maui
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build Android (verification only)
      run: |
        dotnet build ${{ env.PROJECT_PATH }} `
          -c Debug `
          -f net9.0-android `
          --no-restore
